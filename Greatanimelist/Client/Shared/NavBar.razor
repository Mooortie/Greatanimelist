@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<div class="container-fluid navbar bg-headerfooter pt-4">
	<h1>Great Anime list</h1>
	<Router>
		<NotFound>
			<Layout>
				<Route path="/" exact component="typeof(Index)" />
				<Route path="/animelist" component="typeof(About)" />
				<Route path="/showallanimes" component="typeof(show all animes)" />
			</Layout>
		</NotFound>
	</Router>
	<div>
		<NavLink href="/" Match="NavLinkMatch.All">Home</NavLink>
	</div>
	<div>
		<NavLink href="/animelist" Match="NavLinkMatch.All">Anime list</NavLink>
	</div>
	<div>
		<NavLink href="/showallanimes" Match="NavLinkMatch.All">Show all animes list</NavLink>
	</div>
	<div>
		<AuthorizeView>
			<Authorized>
				Hello, @context.User.Identity?.Name!
				<button class="nav-link btn btn-link" @onclick="BeginLogout">Log out</button>
			</Authorized>
			<NotAuthorized>
				<a href="authentication/login">Log in</a>
			</NotAuthorized>
		</AuthorizeView>
	</div>
</div>
@code {
	private async Task BeginLogout(MouseEventArgs args)
	{
		await SignOutManager.SetSignOutState();
	}
}
